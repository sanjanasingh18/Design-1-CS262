Hello - from /Users/sophiaho/.vscode/extensions/jaredly.reason-vscode-1.7.13/bin.native
Previous log location: /var/folders/x2/08rtd11n7zvgjpvymd2383mc0000gn/T/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml","languageId":"ocaml","version":1,"text":"(*\n                              CS51 Lab 6\n     Variants, algebraic types, and pattern matching (continued)\n *)\n#ifdef SOLN\n\n(*\n                               SOLUTION\n *)\n#endif\n\n(* Objective: This lab is intended to reinforce core concepts in\n   typing in OCaml, including:\n\n     Algebraic data types\n     Using algebraic data types to enforce invariants\n     Implementing polymorphic algebraic data types\n *)\n\n(*======================================================================\n\t    Part 2: Binary search trees and Gorn addresses\n\nRecall from Chapter 11 of the textbook that binary trees are a data\nstructure composed of nodes that store a value from some base type as\nwell as a left and a right subtree. To well-found this recursive\ndefinition, a binary tree can also be empty. Defined in this way,\nbinary trees resemble lists, but with two \"tails\".\n\nWe'll use the definition of polymorphic binary trees from the\ntextbook, annotated here to clarify the arguments of the `Node` value\nconstructor: *)\n\ntype 'a bintree =\n  | Empty\n  | Node of 'a * 'a bintree * 'a bintree ;;\n  (*         ^         ^            ^\n             |         |            |\n           value     left         right\n           at node   subtree      subtree      *)\n\n(*......................................................................\nExercise 7: Define a function `node_count : 'a bintree -> int`, which\nreturns the number of internal nodes (that is, not including the empty\ntrees) in a binary tree.\n......................................................................*)\n\n#ifndef SOLN\nlet node_count =\n  fun _ -> failwith \"node_count not implemented\" ;;\n#else\nlet rec node_count (tree : 'a bintree) : int =\n  match tree with\n  | Empty -> 0\n  | Node (_, left, right) -> 1 + node_count left + node_count right ;;\n#endif\n\n(* A *binary search tree* is a binary tree that obeys the following\ninvariant:\n\n    ....................................................................\n    For each node in a binary search tree, all values stored in its\n    left subtree are less than the value stored at the node, and all\n    values stored in its right subtree are greater than the values\n    stored at the node.\n    ....................................................................\n\n(For our purposes, we'll take \"less than\" to correspond to the `<`\noperator.)\n\nFor example, the following integer binary tree is a binary search\ntree:\n *)\n\nlet bst_example =\n  Node (10, Node (5, Empty,\n\t\t     Node (7, Empty,\n\t\t\t      Node (9, Empty, Empty))),\n\tNode (15, Empty, Empty))\n\n(* The `string bintree` named `str_bintree` in the textbook,\nduplicated here, also happens to be a binary search tree. Do you see\nwhy it obeys the invariant?  *)\n\nlet str_bintree =\n        Node (\"red\",\n              Node (\"orange\", Node (\"blue\", Empty,\n                                            Node (\"indigo\", Empty, Empty)),\n                              Empty),\n              Node (\"yellow\", Empty,\n                              Node (\"violet\", Empty, Empty))) ;;\n\n(* Binary search trees are useful because, as indicated by the name,\nsearching for a value in a binary search tree is especially\nefficient. Rather than needing to search for a value throughout the\nwhole tree, the value stored at a node tells you determinately whether\nto search in the left or the right subtree. Other functionality, like\nfinding the minimum or maximum value in a tree are especially\nefficient in binary search trees. *)\n  \n(*......................................................................\nExercise 8: Define a function `find_bst` for binary search trees, such\nthat `find_bst tree value` returns `true` if `value` is stored at some\nnode in `tree`, and `false` otherwise. For instance,\n\n    # find_bst bst_example 9 ;;\n    - : bool = true\n    # find_bst bst_example 10 ;;\n    - : bool = true\n    # find_bst bst_example 100 ;;\n    - : bool = false\n......................................................................*)\n  \n#ifndef SOLN\nlet find_bst = fun _ -> failwith \"find_bst not implemented\" ;;\n#else\nlet rec find_bst (tree : 'a bintree) (value : 'a) : bool =\n  match tree with\n  | Empty -> false\n  | Node (stored, left, right) ->\n     stored = value\n     || find_bst left value\n     || find_bst right value ;;\n#endif\n\n(*......................................................................\nExercise 9: Define a function `min_bst`, such that `min_bst tree`\nreturns the minimum value stored in binary search tree `tree` as an\noption type, and `None` if the tree has no stored values. For purposes\nof determining the minimum, you can use the `Stdlib.min` operator for\ncomparing values stored in the nodes of the tree. For instance,\n\n    # min_bst bst_example ;;\n    - : int option = Some 5\n    # min_bst Empty ;;\n    - : 'a option = None\n......................................................................*)\n\n#ifndef SOLN\nlet min_bst (tree : 'a bintree): 'a option =\n  failwith \"min_bst not implemented\" ;;\n#else\nlet rec min_bst (tree : 'a bintree): 'a option =\n  match tree with\n  | Empty -> None\n  | Node (value, left, _right) ->\n     match left with\n     | Empty -> Some value\n     | Node (_,_,_) -> min_bst left ;;\n\n(* Notice that since the tree is stipulated to be a binary search\n   tree, we never need to look at the right subtree.*)\n#endif\n\n(* Constructing binary search trees must be done carefully so that the\ninvariant is always preserved. Next, you'll implement a function for\nadding a value to a binary search tree,while maintaining the\ninvariant. *)\n   \n(*......................................................................\nExercise 10: Define a function `insert_bst : 'a -> 'a bintree -> 'a\nbintree` such that if `tree` is a binary search tree, `insert_bst\nvalue tree` returns a tree with the same elements as `tree` but also\nwith the new `value` inserted. (If the value is already in the tree,\nthe tree can be returned unchanged.) Make sure that the tree that is\nreturned maintains the binary search tree invariant.\n\nFor instance, your function should have the following behavior.\n\n    # let tr = Empty\n\t       |> insert_bst 10\n\t       |> insert_bst 5\n\t       |> insert_bst 15\n\t       |> insert_bst 7\n\t       |> insert_bst 9 ;;            \n    val tr : int bintree =\n      Node (10, Node (5, Empty, Node (7, Empty, Node (9, Empty, Empty))),\n       Node (15, Empty, Empty))\n......................................................................*)\n\n#ifndef SOLN  \nlet rec insert_bst (value : 'a) (tree : 'a bintree) : 'a bintree =\n  failwith \"insert_bst not implemented\" ;;\n#else\nlet rec insert_bst (value : 'a) (tree : 'a bintree) : 'a bintree =\n  match tree with\n  | Empty -> Node (value, Empty, Empty)\n  | Node (old, left, right) ->\n     if value = old then tree\n     else if value < old then\n       Node (old, insert_bst value left, right)\n     else (* value > old *)\n       Node (old, left, insert_bst value right) ;;\n#endif\n     \n(* The *Gorn address* of a node in a tree (named after the early\ncomputer pioneer Saul Gorn of University of Pennsylvania, who invented\nthe technique) is a description of the path to take from the root of\nthe tree to the node in question. For a binary tree, the elements of\nthe path specify whether to go left or right at each node starting\nfrom the root of the tree. We'll define an enumerated type for the\npurpose of recording the left/right moves. *)\n\ntype direction = Left | Right ;;\n\n(* Thus, for the tree `bst_example` defined above, the Gorn address\nof the root is `[]` and the Gorn address of the node containing the\nvalue `9` is `[Left, Right, Right]`. *)\n\n(*......................................................................\nExercise 11: Define a function `gorn : 'a -> 'a bintree -> direction\nlist` that given a value and a binary search tree returns the Gorn\naddress of the value in the tree. It should raise a `Failure` exception\nif the value doesn't occur in the tree. For instance,\n\n    # gorn 9 bst_example ;;\n    - : direction list = [Left; Right; Right]\n    # gorn 10 bst_example ;;\n    - : direction list = []\n    # gorn 100 bst_example ;;\n    Exception: Failure \"gorn: value not found\".\n......................................................................*)\n\n#ifndef SOLN  \nlet rec gorn (value : 'a) (tree : 'a bintree) : 'a bintree =\n  failwith \"gorn not implemented\" ;;\n#else\nlet rec gorn (value : 'a) (tree : 'a bintree) : direction list =\n  match tree with\n  | Empty -> failwith \"gorn: value not found\"\n  | Node (old, left, right) ->\n     if value = old then []\n     else if value < old then\n       Left :: gorn value left\n     else (* value > old *)\n       Right :: gorn value right ;;\n#endif\n"}}}
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0190734863281ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 1, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.014066696167ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 2, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":3,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0159740447998ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 3, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part1.cppo.ml","languageId":"ocaml","version":1,"text":"(*\n                              CS51 Lab 6\n     Variants, algebraic types, and pattern matching (continued)\n *)\n#ifdef SOLN\n\n(*\n                               SOLUTION\n *)\n#endif\n\n(* Objective: This lab is intended to reinforce core concepts in\n   typing in OCaml, including:\n\n     Algebraic data types\n     Using algebraic data types to enforce invariants\n     Implementing polymorphic algebraic data types\n *)\n\n(*======================================================================\n                          Part 1: Camlville\n                  Variants and invariants revisited\n\nIn this lab you'll continue to use algebraic data types to create\nseveral data structures.\n\nFirst, you'll complete instructive examples on variant types and\nenforcing invariants to model residences in Camlville. Then, you'll\nrevisit an example from the reading to implement a polymorphic list as\nan algebraic data type. Building on the reading, we'll add some more\nfunctionality to this type.\n\nNOTE: As was the case last time, since we ask that you define types in\nthis lab, you must complete certain exercises (1 and 9) before this\nwill compile with the testing framework on the course grading\nserver. We'll provide hints so you'll be sure to get those types\nright.\n\n........................................................................\nExercise 1: There are two kinds of residences in Camlville.  A *house*\nin Camlville has a street name, zip code, and building number. An\n*apartment* in Camlville has a street name, zip code, building number\n(the same for all units in the building), and a unit number.\n\nDefine a variant type to capture the idea of a residence. What\nrepresentation and types make sense? Is there one right answer or\nseveral possibilities?\n\nWe will start by assuming there are no restrictions on the zip code\nand building and unit numbers other than those given by their types\n(zip codes must be strings and building and unit numbers must be\nintegers). Though zipcodes on first glance are numbers, they are\ngenerally not treated as numbers. What would be the conceptual meaning\nof averaging zipcodes? They also can contain leading zeros (Cambridge,\n02138). Consequently, we choose to represent zipcodes as strings.\n\nHowever, there are only four streets in Camlville (regardless of\nzipcode) which are the following:\n\n    High Street\n    Hauptstrasse\n    Rue Principale\n    Main Street\n\nHow might you use algebraic data types to enforce this invariant on\nstreet names?\n\n************************************************************************\nTry to do this exercise first. There may be more than one way to solve\nthis problem, so if your solution doesn't compile against our unit\ntests, see <https://url.cs51.io/lab6-1> for our solution and use\nthat. Do not proceed until your code compiles cleanly against the unit\ntests.\n************************************************************************\n......................................................................*)\n\n#ifndef SOLN\ntype residence = NotImplemented ;;\n#else\ntype street =\n  | HighStreet\n  | Hauptstrasse\n  | RuePrincipale\n  | MainStreet ;;\n\ntype address = { building : int; street : street; zip_code : string } ;;\n\ntype residence =\n  | House of address\n  | Apartment of int * address ;;\n\n(* A first pass at defining a residence algebraic data type may have\n   looked like this:\n\n      type residence =\n        | House of int * street * string\n        | Apartment of int * int * street * string ;;\n\n   This algebraic data type follows the pattern of the RGB colors from\n   the last lab. Each data component is an element of the\n   tuple. However, RGB's have a well-known definitive ordering of data\n   elements inherent in the name RGB. It is less clear what the\n   ordering of elements in the tuples above represent. Someone seeing\n   the apartment value may not be sure which `int` represented the\n   street number and which the unit. Records allow for the creation of\n   names to clearly label values. As records are types, they can be\n   used in algebraic data types as well. An alternative residence\n   algebraic data type using records may have been as below:\n\n      type house = { building : int; \n                     street : street;\n                     zipcode : string} ;;\n      type apartment = { unit : int;\n                         building : int;\n                         street : street;\n                         zipcode : string} ;;\n      type residence =\n        | House of house\n        | Apartment of apartment ;;\n\n   This format has the advantage of named fields. For the apartment\n   especially, it is now quite clear what each `int` represents, and\n   the order of fields is not important. However, the `house` and\n   `apartment` records have a lot in common. Our first algebraic data\n   type packages that commonality into a single `address` record,\n   which is common to both houses and apartments. As apartments have\n   only one additional field, it seems reasonable to create the `int *\n   address` tuple to add the unit number. *)\n#endif\n\n(* After implementing the residence type, compare it with our type\ndefinition at <https://url.cs51.io/lab6-1>. Consider the tradeoffs we\nmay have considered if you find our definition differs from your own.\n\nTo compile against our unit tests, please change your definition to\nmatch ours. You may comment out your original type definition if you\nwould like to keep it.\n\nValid zip codes in Camlville are given as five digits. For example,\n12345, 63130, and 02138 are valid zipcodes, but -0004, 2138, and F69A\nare not. We'll represent zip codes with strings, but will want to be\nable to validate them appropriately. In this lab, we'll use the\n`valid_` validation convention from lab 5. *)\n\n(*......................................................................\nExercise 2: Define a function `valid_zip` that takes in a `string` and\nreturns a `bool` indicating whether or not the string represents a\nvalid zip code. You may find the function `Stdlib.int_of_string_opt`\nand the `String` or `Str` modules to be useful.\n\n(For the purpose of defining a \"valid zip code\", you don't have to\nworry about what the function does on strings interpreted as\nnon-base-10 numbers. For example, `0x100` (hexadecimal) may or may not\npass your test but `abcde` definitely should not.\n......................................................................*)\n\n#ifndef SOLN\nlet valid_zip = fun _ -> failwith \"valid_zip not implemented\" ;;\n#else\n(* This solution uses `int_of_string_opt` to convert a five-character\n   string. It inherits some not ideal behavior from that function,\n   for instance,\n\n      # valid_zip \"0___0\" ;;\n      - : bool = true\n      # valid_zip \"0x100\" ;;\n      - : bool = true\n *)\nlet valid_zip (zip : string) : bool =\n  String.length zip = 5\n  && match int_of_string_opt zip with\n     | None -> false\n     | Some x -> x >= 0 ;;\n\n(* An alternative uses the simple regular expression patterns from the\n   Str module. It more directly manifests the requirement of five\n   decimal digits:\n\n      # valid_zip \"0___0\" ;;\n      - : bool = false\n      # valid_zip \"0x100\" ;;\n      - : bool = false\n\n    let valid_zip (zip : string) : bool =\n      let pattern = Str.regexp \"^[0-9][0-9][0-9][0-9][0-9]$\" in\n      Str.string_match pattern zip 0 ;;\n *)\n#endif\n\n(*......................................................................\nExercise 3: Define a function `valid_residence` that enforces proper\nzipcodes, and verifies that building and unit numbers are greater than\n0. It should return `true` if its argument is valid and `false`\notherwise.\n......................................................................*)\n\n#ifndef SOLN\nlet valid_residence =\n  fun _ -> failwith \"valid_residence not implemented\" ;;\n#else\n(* Here's a self-contained definition. *)\n\nlet valid_residence (res : residence) : bool =\n  let valid_address ({building; zip_code; _} : address) : bool =\n    valid_zip zip_code && building > 0 in\n  match res with\n  | House addr -> valid_address addr\n  | Apartment (apt_unit, addr) -> valid_address addr && apt_unit > 0 ;;\n\n(* An important design question is when one should define an auxiliary\n   function locally within the body of a larger function (as with\n   `valid_address` inside `valid_residence` above) and when to\n   globally define an auxiliary function. Generally, you should define\n   a function in the *smallest scope possible that simultaneously\n   limits redundancy*. In other words, auxiliary functions should be\n   defined within the function they are used in unless they are of\n   more general applicability. In the above approach, the\n   `valid_address` function is localized to the `valid_residence`\n   function. But an address-validation function is arguably of\n   general utility. Thus it may be appropriate to separate it out,\n   as\n\n    let valid_address ({building; zip_code; _} : address) : bool =\n      valid_zip zip_code && building > 0 ;;\n\n   Then the `valid_residence` function can be simplified to \n\n    let valid_residence (res : residence) : bool =\n      match res with\n      | House addr -> valid_address addr\n      | Apartment(apt_unit, addr) -> valid_address addr && apt_unit > 0 ;;\n *)\n#endif\n\n(*......................................................................\nExercise 4: Time to get neighborly. Define a function `neighbors` that\ntakes two residences and returns a `bool` indicating whether or not\nthey are neighbors. In Camlville, a neighbor is someone living on the\nsame street in the same zipcode.\n\nNote: By this definition, a residence is considered to be its own\nneighbor.\n......................................................................*)\n\n#ifndef SOLN\nlet neighbors (place1 : residence) (place2 : residence) : bool =\n  failwith \"neighbors not implemented\" ;;\n#else\n(* Further to the design issue of local versus global function\n   definitions, because we will use `address_of_residence` in\n   solutions to subsequent problems, we define it globally here. *)\n\nlet address_of_residence (r : residence) : address =\n  match r with\n  | House addr\n  | Apartment(_, addr) -> addr ;;\n\nlet neighbors (place1 : residence) (place2 : residence) : bool =\n  let addr1 = address_of_residence place1 in\n  let addr2 = address_of_residence place2 in\n  addr1.street = addr2.street && addr1.zip_code = addr2.zip_code ;;\n#endif\n\n(*......................................................................\nExercise 5: When buyers purchase a new residence in Camlville, they\nmust register the ersidence with the town hall, which creates a record\nof the residence location and owner.\n\nImplement a function `record_residence` to perform this\nbookkeeping. It should accept a residence and a name (which should be\na string) and return the corresponding entry to be made as a value of\nthe type `town_record`, defined below. The town works hard to prevent\nfraudulent residences from being entered into historical records and\nhas asked you to do the same by raising an `Invalid_argument`\nexception when appropriate.\n......................................................................*)\n\ntype town_record = { residence : residence; name : string } ;;\n\n#ifndef SOLN\nlet record_residence (res : residence) (name : string) : town_record =\n  failwith \"record_residence not implemented\" ;;\n#else\nlet record_residence (residence : residence)\n                     (name : string)\n                   : town_record =\n  if valid_residence residence then\n    { residence; name }\n  else\n    raise (Invalid_argument \"record_residence: invalid residence\") ;;\n\n(* We've renamed one of the arguments to take advantage of field\n   punning in the return value. *)\n#endif\n\n(*......................................................................\nExercise 6: Neighbor search.\n\nAs part of Bob's promotion, he has been moved to the next floor up at\nwork. He doesn't yet know any of his coworkers, and so he decides to\nsearch through Camlville's records to determine which of them are his\nneighbors. Camlville keeps extensive records, so he doesn't want to\nhave to look them up manually. Instead, he asks you to do it for him,\nsince he heard you were learning a lot of useful skills in CS51.\n\nWrite a function `named_neighbors` that, given two names (strings\nagain) and a `town_record list`, searches though the list to\ndetermine if the two people are neighbors, as defined above, and\nreturns a `bool`. Return a `Failure` exception in the event that\neither of the names does not appear in the list of records. You can\nassume that no two town records have the same name.\n\nHint: You may find the `List.find` function to be useful.\n......................................................................*)\n\n#ifndef SOLN\nlet named_neighbors =\n  fun _ -> failwith \"named_neighbors not implemented\" ;;\n#else\n(* This implementation makes good use of the `List.find` function,\n   trapping its exception and reraising the desired one if the name is\n   not found. Notice how find_residence_with_name doesn't need an\n   argument for the town records, as it is defined within the scope of\n   the `records` argument. *)\n\nlet named_neighbors (name1 : string)\n                    (name2 : string)\n                    (records : town_record list)\n                  : bool =\n\n  let find_residence_with_name name =\n    try\n      (List.find (fun record -> record.name = name) records).residence\n    with Not_found -> failwith \"named_neighbors: name not found\" in\n\n  neighbors (find_residence_with_name name1)\n            (find_residence_with_name name2) ;;\n#endif\n"}}}
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part1.cppo.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00905990600586ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 4, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":5,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part1.cppo.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00905990600586ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 5, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":6,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part1.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0121593475342ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 6, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":7,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part1.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.897884368896ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 7, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":8,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part1.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0178813934326ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 8, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":9,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part1.cppo.ml"},"position":{"line":301,"character":34}}}
[server] Got a method textDocument/hover
[server] processing took 0.0200271606445ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 9, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":9}}
Read message 
{"jsonrpc":"2.0","id":10,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0209808349609ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 10, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":11,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0250339508057ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 11, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":12,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"},"position":{"line":12,"character":29}}}
[server] Got a method textDocument/hover
[server] processing took 0.0159740447998ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 12, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":12}}
Read message 
{"jsonrpc":"2.0","id":13,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0350475311279ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 13, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml","version":2},"contentChanges":[{"text":"\n(*\n                              CS51 Lab 6\n     Variants, algebraic types, and pattern matching (continued)\n *)\n#ifdef SOLN\n\n(*\n                               SOLUTION\n *)\n#endif\n\n(* Objective: This lab is intended to reinforce core concepts in\n   typing in OCaml, including:\n\n     Algebraic data types\n     Using algebraic data types to enforce invariants\n     Implementing polymorphic algebraic data types\n *)\n\n(*======================================================================\n\t    Part 2: Binary search trees and Gorn addresses\n\nRecall from Chapter 11 of the textbook that binary trees are a data\nstructure composed of nodes that store a value from some base type as\nwell as a left and a right subtree. To well-found this recursive\ndefinition, a binary tree can also be empty. Defined in this way,\nbinary trees resemble lists, but with two \"tails\".\n\nWe'll use the definition of polymorphic binary trees from the\ntextbook, annotated here to clarify the arguments of the `Node` value\nconstructor: *)\n\ntype 'a bintree =\n  | Empty\n  | Node of 'a * 'a bintree * 'a bintree ;;\n  (*         ^         ^            ^\n             |         |            |\n           value     left         right\n           at node   subtree      subtree      *)\n\n(*......................................................................\nExercise 7: Define a function `node_count : 'a bintree -> int`, which\nreturns the number of internal nodes (that is, not including the empty\ntrees) in a binary tree.\n......................................................................*)\n\n#ifndef SOLN\nlet node_count =\n  fun _ -> failwith \"node_count not implemented\" ;;\n#else\nlet rec node_count (tree : 'a bintree) : int =\n  match tree with\n  | Empty -> 0\n  | Node (_, left, right) -> 1 + node_count left + node_count right ;;\n#endif\n\n(* A *binary search tree* is a binary tree that obeys the following\ninvariant:\n\n    ....................................................................\n    For each node in a binary search tree, all values stored in its\n    left subtree are less than the value stored at the node, and all\n    values stored in its right subtree are greater than the values\n    stored at the node.\n    ....................................................................\n\n(For our purposes, we'll take \"less than\" to correspond to the `<`\noperator.)\n\nFor example, the following integer binary tree is a binary search\ntree:\n *)\n\nlet bst_example =\n  Node (10, Node (5, Empty,\n\t\t     Node (7, Empty,\n\t\t\t      Node (9, Empty, Empty))),\n\tNode (15, Empty, Empty))\n\n(* The `string bintree` named `str_bintree` in the textbook,\nduplicated here, also happens to be a binary search tree. Do you see\nwhy it obeys the invariant?  *)\n\nlet str_bintree =\n        Node (\"red\",\n              Node (\"orange\", Node (\"blue\", Empty,\n                                            Node (\"indigo\", Empty, Empty)),\n                              Empty),\n              Node (\"yellow\", Empty,\n                              Node (\"violet\", Empty, Empty))) ;;\n\n(* Binary search trees are useful because, as indicated by the name,\nsearching for a value in a binary search tree is especially\nefficient. Rather than needing to search for a value throughout the\nwhole tree, the value stored at a node tells you determinately whether\nto search in the left or the right subtree. Other functionality, like\nfinding the minimum or maximum value in a tree are especially\nefficient in binary search trees. *)\n  \n(*......................................................................\nExercise 8: Define a function `find_bst` for binary search trees, such\nthat `find_bst tree value` returns `true` if `value` is stored at some\nnode in `tree`, and `false` otherwise. For instance,\n\n    # find_bst bst_example 9 ;;\n    - : bool = true\n    # find_bst bst_example 10 ;;\n    - : bool = true\n    # find_bst bst_example 100 ;;\n    - : bool = false\n......................................................................*)\n  \n#ifndef SOLN\nlet find_bst = fun _ -> failwith \"find_bst not implemented\" ;;\n#else\nlet rec find_bst (tree : 'a bintree) (value : 'a) : bool =\n  match tree with\n  | Empty -> false\n  | Node (stored, left, right) ->\n     stored = value\n     || find_bst left value\n     || find_bst right value ;;\n#endif\n\n(*......................................................................\nExercise 9: Define a function `min_bst`, such that `min_bst tree`\nreturns the minimum value stored in binary search tree `tree` as an\noption type, and `None` if the tree has no stored values. For purposes\nof determining the minimum, you can use the `Stdlib.min` operator for\ncomparing values stored in the nodes of the tree. For instance,\n\n    # min_bst bst_example ;;\n    - : int option = Some 5\n    # min_bst Empty ;;\n    - : 'a option = None\n......................................................................*)\n\n#ifndef SOLN\nlet min_bst (tree : 'a bintree): 'a option =\n  failwith \"min_bst not implemented\" ;;\n#else\nlet rec min_bst (tree : 'a bintree): 'a option =\n  match tree with\n  | Empty -> None\n  | Node (value, left, _right) ->\n     match left with\n     | Empty -> Some value\n     | Node (_,_,_) -> min_bst left ;;\n\n(* Notice that since the tree is stipulated to be a binary search\n   tree, we never need to look at the right subtree.*)\n#endif\n\n(* Constructing binary search trees must be done carefully so that the\ninvariant is always preserved. Next, you'll implement a function for\nadding a value to a binary search tree,while maintaining the\ninvariant. *)\n   \n(*......................................................................\nExercise 10: Define a function `insert_bst : 'a -> 'a bintree -> 'a\nbintree` such that if `tree` is a binary search tree, `insert_bst\nvalue tree` returns a tree with the same elements as `tree` but also\nwith the new `value` inserted. (If the value is already in the tree,\nthe tree can be returned unchanged.) Make sure that the tree that is\nreturned maintains the binary search tree invariant.\n\nFor instance, your function should have the following behavior.\n\n    # let tr = Empty\n\t       |> insert_bst 10\n\t       |> insert_bst 5\n\t       |> insert_bst 15\n\t       |> insert_bst 7\n\t       |> insert_bst 9 ;;            \n    val tr : int bintree =\n      Node (10, Node (5, Empty, Node (7, Empty, Node (9, Empty, Empty))),\n       Node (15, Empty, Empty))\n......................................................................*)\n\n#ifndef SOLN  \nlet rec insert_bst (value : 'a) (tree : 'a bintree) : 'a bintree =\n  failwith \"insert_bst not implemented\" ;;\n#else\nlet rec insert_bst (value : 'a) (tree : 'a bintree) : 'a bintree =\n  match tree with\n  | Empty -> Node (value, Empty, Empty)\n  | Node (old, left, right) ->\n     if value = old then tree\n     else if value < old then\n       Node (old, insert_bst value left, right)\n     else (* value > old *)\n       Node (old, left, insert_bst value right) ;;\n#endif\n     \n(* The *Gorn address* of a node in a tree (named after the early\ncomputer pioneer Saul Gorn of University of Pennsylvania, who invented\nthe technique) is a description of the path to take from the root of\nthe tree to the node in question. For a binary tree, the elements of\nthe path specify whether to go left or right at each node starting\nfrom the root of the tree. We'll define an enumerated type for the\npurpose of recording the left/right moves. *)\n\ntype direction = Left | Right ;;\n\n(* Thus, for the tree `bst_example` defined above, the Gorn address\nof the root is `[]` and the Gorn address of the node containing the\nvalue `9` is `[Left, Right, Right]`. *)\n\n(*......................................................................\nExercise 11: Define a function `gorn : 'a -> 'a bintree -> direction\nlist` that given a value and a binary search tree returns the Gorn\naddress of the value in the tree. It should raise a `Failure` exception\nif the value doesn't occur in the tree. For instance,\n\n    # gorn 9 bst_example ;;\n    - : direction list = [Left; Right; Right]\n    # gorn 10 bst_example ;;\n    - : direction list = []\n    # gorn 100 bst_example ;;\n    Exception: Failure \"gorn: value not found\".\n......................................................................*)\n\n#ifndef SOLN  \nlet rec gorn (value : 'a) (tree : 'a bintree) : 'a bintree =\n  failwith \"gorn not implemented\" ;;\n#else\nlet rec gorn (value : 'a) (tree : 'a bintree) : direction list =\n  match tree with\n  | Empty -> failwith \"gorn: value not found\"\n  | Node (old, left, right) ->\n     if value = old then []\n     else if value < old then\n       Left :: gorn value left\n     else (* value > old *)\n       Right :: gorn value right ;;\n#endif\n"}]}}
Read message 
{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"},"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0460147857666ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 14, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":15,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0109672546387ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 15, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin", "command": ""}}]}
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":16,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0691413879395ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 16, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml","version":3},"contentChanges":[{"text":"(*\n                              CS51 Lab 6\n     Variants, algebraic types, and pattern matching (continued)\n *)\n#ifdef SOLN\n\n(*\n                               SOLUTION\n *)\n#endif\n\n(* Objective: This lab is intended to reinforce core concepts in\n   typing in OCaml, including:\n\n     Algebraic data types\n     Using algebraic data types to enforce invariants\n     Implementing polymorphic algebraic data types\n *)\n\n(*======================================================================\n\t    Part 2: Binary search trees and Gorn addresses\n\nRecall from Chapter 11 of the textbook that binary trees are a data\nstructure composed of nodes that store a value from some base type as\nwell as a left and a right subtree. To well-found this recursive\ndefinition, a binary tree can also be empty. Defined in this way,\nbinary trees resemble lists, but with two \"tails\".\n\nWe'll use the definition of polymorphic binary trees from the\ntextbook, annotated here to clarify the arguments of the `Node` value\nconstructor: *)\n\ntype 'a bintree =\n  | Empty\n  | Node of 'a * 'a bintree * 'a bintree ;;\n  (*         ^         ^            ^\n             |         |            |\n           value     left         right\n           at node   subtree      subtree      *)\n\n(*......................................................................\nExercise 7: Define a function `node_count : 'a bintree -> int`, which\nreturns the number of internal nodes (that is, not including the empty\ntrees) in a binary tree.\n......................................................................*)\n\n#ifndef SOLN\nlet node_count =\n  fun _ -> failwith \"node_count not implemented\" ;;\n#else\nlet rec node_count (tree : 'a bintree) : int =\n  match tree with\n  | Empty -> 0\n  | Node (_, left, right) -> 1 + node_count left + node_count right ;;\n#endif\n\n(* A *binary search tree* is a binary tree that obeys the following\ninvariant:\n\n    ....................................................................\n    For each node in a binary search tree, all values stored in its\n    left subtree are less than the value stored at the node, and all\n    values stored in its right subtree are greater than the values\n    stored at the node.\n    ....................................................................\n\n(For our purposes, we'll take \"less than\" to correspond to the `<`\noperator.)\n\nFor example, the following integer binary tree is a binary search\ntree:\n *)\n\nlet bst_example =\n  Node (10, Node (5, Empty,\n\t\t     Node (7, Empty,\n\t\t\t      Node (9, Empty, Empty))),\n\tNode (15, Empty, Empty))\n\n(* The `string bintree` named `str_bintree` in the textbook,\nduplicated here, also happens to be a binary search tree. Do you see\nwhy it obeys the invariant?  *)\n\nlet str_bintree =\n        Node (\"red\",\n              Node (\"orange\", Node (\"blue\", Empty,\n                                            Node (\"indigo\", Empty, Empty)),\n                              Empty),\n              Node (\"yellow\", Empty,\n                              Node (\"violet\", Empty, Empty))) ;;\n\n(* Binary search trees are useful because, as indicated by the name,\nsearching for a value in a binary search tree is especially\nefficient. Rather than needing to search for a value throughout the\nwhole tree, the value stored at a node tells you determinately whether\nto search in the left or the right subtree. Other functionality, like\nfinding the minimum or maximum value in a tree are especially\nefficient in binary search trees. *)\n  \n(*......................................................................\nExercise 8: Define a function `find_bst` for binary search trees, such\nthat `find_bst tree value` returns `true` if `value` is stored at some\nnode in `tree`, and `false` otherwise. For instance,\n\n    # find_bst bst_example 9 ;;\n    - : bool = true\n    # find_bst bst_example 10 ;;\n    - : bool = true\n    # find_bst bst_example 100 ;;\n    - : bool = false\n......................................................................*)\n  \n#ifndef SOLN\nlet find_bst = fun _ -> failwith \"find_bst not implemented\" ;;\n#else\nlet rec find_bst (tree : 'a bintree) (value : 'a) : bool =\n  match tree with\n  | Empty -> false\n  | Node (stored, left, right) ->\n     stored = value\n     || find_bst left value\n     || find_bst right value ;;\n#endif\n\n(*......................................................................\nExercise 9: Define a function `min_bst`, such that `min_bst tree`\nreturns the minimum value stored in binary search tree `tree` as an\noption type, and `None` if the tree has no stored values. For purposes\nof determining the minimum, you can use the `Stdlib.min` operator for\ncomparing values stored in the nodes of the tree. For instance,\n\n    # min_bst bst_example ;;\n    - : int option = Some 5\n    # min_bst Empty ;;\n    - : 'a option = None\n......................................................................*)\n\n#ifndef SOLN\nlet min_bst (tree : 'a bintree): 'a option =\n  failwith \"min_bst not implemented\" ;;\n#else\nlet rec min_bst (tree : 'a bintree): 'a option =\n  match tree with\n  | Empty -> None\n  | Node (value, left, _right) ->\n     match left with\n     | Empty -> Some value\n     | Node (_,_,_) -> min_bst left ;;\n\n(* Notice that since the tree is stipulated to be a binary search\n   tree, we never need to look at the right subtree.*)\n#endif\n\n(* Constructing binary search trees must be done carefully so that the\ninvariant is always preserved. Next, you'll implement a function for\nadding a value to a binary search tree,while maintaining the\ninvariant. *)\n   \n(*......................................................................\nExercise 10: Define a function `insert_bst : 'a -> 'a bintree -> 'a\nbintree` such that if `tree` is a binary search tree, `insert_bst\nvalue tree` returns a tree with the same elements as `tree` but also\nwith the new `value` inserted. (If the value is already in the tree,\nthe tree can be returned unchanged.) Make sure that the tree that is\nreturned maintains the binary search tree invariant.\n\nFor instance, your function should have the following behavior.\n\n    # let tr = Empty\n\t       |> insert_bst 10\n\t       |> insert_bst 5\n\t       |> insert_bst 15\n\t       |> insert_bst 7\n\t       |> insert_bst 9 ;;            \n    val tr : int bintree =\n      Node (10, Node (5, Empty, Node (7, Empty, Node (9, Empty, Empty))),\n       Node (15, Empty, Empty))\n......................................................................*)\n\n#ifndef SOLN  \nlet rec insert_bst (value : 'a) (tree : 'a bintree) : 'a bintree =\n  failwith \"insert_bst not implemented\" ;;\n#else\nlet rec insert_bst (value : 'a) (tree : 'a bintree) : 'a bintree =\n  match tree with\n  | Empty -> Node (value, Empty, Empty)\n  | Node (old, left, right) ->\n     if value = old then tree\n     else if value < old then\n       Node (old, insert_bst value left, right)\n     else (* value > old *)\n       Node (old, left, insert_bst value right) ;;\n#endif\n     \n(* The *Gorn address* of a node in a tree (named after the early\ncomputer pioneer Saul Gorn of University of Pennsylvania, who invented\nthe technique) is a description of the path to take from the root of\nthe tree to the node in question. For a binary tree, the elements of\nthe path specify whether to go left or right at each node starting\nfrom the root of the tree. We'll define an enumerated type for the\npurpose of recording the left/right moves. *)\n\ntype direction = Left | Right ;;\n\n(* Thus, for the tree `bst_example` defined above, the Gorn address\nof the root is `[]` and the Gorn address of the node containing the\nvalue `9` is `[Left, Right, Right]`. *)\n\n(*......................................................................\nExercise 11: Define a function `gorn : 'a -> 'a bintree -> direction\nlist` that given a value and a binary search tree returns the Gorn\naddress of the value in the tree. It should raise a `Failure` exception\nif the value doesn't occur in the tree. For instance,\n\n    # gorn 9 bst_example ;;\n    - : direction list = [Left; Right; Right]\n    # gorn 10 bst_example ;;\n    - : direction list = []\n    # gorn 100 bst_example ;;\n    Exception: Failure \"gorn: value not found\".\n......................................................................*)\n\n#ifndef SOLN  \nlet rec gorn (value : 'a) (tree : 'a bintree) : 'a bintree =\n  failwith \"gorn not implemented\" ;;\n#else\nlet rec gorn (value : 'a) (tree : 'a bintree) : direction list =\n  match tree with\n  | Empty -> failwith \"gorn: value not found\"\n  | Node (old, left, right) ->\n     if value = old then []\n     else if value < old then\n       Left :: gorn value left\n     else (* value > old *)\n       Right :: gorn value right ;;\n#endif\n"}]}}
Read message 
{"jsonrpc":"2.0","id":17,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0381469726562ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 17, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":18,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0121593475342ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 18, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":16}}
Read message 
{"jsonrpc":"2.0","id":19,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0100135803223ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 19, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml","version":3},"contentChanges":[{"text":"(*\n                              CS51 Lab 6\n     Variants, algebraic types, and pattern matching (continued)\n *)\n#ifdef SOLN\n\n(*\n                               SOLUTION\n *)\n#endif\n\n(* Objective: This lab is intended to reinforce core concepts in\n   typing in OCaml, including:\n\n     Algebraic data types\n     Using algebraic data types to enforce invariants\n     Implementing polymorphic algebraic data types\n *)\n\n(*======================================================================\n\t    Part 2: Binary search trees and Gorn addresses\n\nRecall from Chapter 11 of the textbook that binary trees are a data\nstructure composed of nodes that store a value from some base type as\nwell as a left and a right subtree. To well-found this recursive\ndefinition, a binary tree can also be empty. Defined in this way,\nbinary trees resemble lists, but with two \"tails\".\n\nWe'll use the definition of polymorphic binary trees from the\ntextbook, annotated here to clarify the arguments of the `Node` value\nconstructor: *)\n\ntype 'a bintree =\n  | Empty\n  | Node of 'a * 'a bintree * 'a bintree ;;\n  (*         ^         ^            ^\n             |         |            |\n           value     left         right\n           at node   subtree      subtree      *)\n\n(*......................................................................\nExercise 7: Define a function `node_count : 'a bintree -> int`, which\nreturns the number of internal nodes (that is, not including the empty\ntrees) in a binary tree.\n......................................................................*)\n\n#ifndef SOLN\nlet node_count =\n  fun _ -> failwith \"node_count not implemented\" ;;\n#else\nlet rec node_count (tree : 'a bintree) : int =\n  match tree with\n  | Empty -> 0\n  | Node (_, left, right) -> 1 + node_count left + node_count right ;;\n#endif\n\n(* A *binary search tree* is a binary tree that obeys the following\ninvariant:\n\n    ....................................................................\n    For each node in a binary search tree, all values stored in its\n    left subtree are less than the value stored at the node, and all\n    values stored in its right subtree are greater than the values\n    stored at the node.\n    ....................................................................\n\n(For our purposes, we'll take \"less than\" to correspond to the `<`\noperator.)\n\nFor example, the following integer binary tree is a binary search\ntree:\n *)\n\nlet bst_example =\n  Node (10, Node (5, Empty,\n\t\t     Node (7, Empty,\n\t\t\t      Node (9, Empty, Empty))),\n\tNode (15, Empty, Empty))\n\n(* The `string bintree` named `str_bintree` in the textbook,\nduplicated here, also happens to be a binary search tree. Do you see\nwhy it obeys the invariant?  *)\n\nlet str_bintree =\n        Node (\"red\",\n              Node (\"orange\", Node (\"blue\", Empty,\n                                            Node (\"indigo\", Empty, Empty)),\n                              Empty),\n              Node (\"yellow\", Empty,\n                              Node (\"violet\", Empty, Empty))) ;;\n\n(* Binary search trees are useful because, as indicated by the name,\nsearching for a value in a binary search tree is especially\nefficient. Rather than needing to search for a value throughout the\nwhole tree, the value stored at a node tells you determinately whether\nto search in the left or the right subtree. Other functionality, like\nfinding the minimum or maximum value in a tree are especially\nefficient in binary search trees. *)\n  \n(*......................................................................\nExercise 8: Define a function `find_bst` for binary search trees, such\nthat `find_bst tree value` returns `true` if `value` is stored at some\nnode in `tree`, and `false` otherwise. For instance,\n\n    # find_bst bst_example 9 ;;\n    - : bool = true\n    # find_bst bst_example 10 ;;\n    - : bool = true\n    # find_bst bst_example 100 ;;\n    - : bool = false\n......................................................................*)\n  \n#ifndef SOLN\nlet find_bst = fun _ -> failwith \"find_bst not implemented\" ;;\n#else\nlet rec find_bst (tree : 'a bintree) (value : 'a) : bool =\n  match tree with\n  | Empty -> false\n  | Node (stored, left, right) ->\n     stored = value\n     || find_bst left value\n     || find_bst right value ;;\n#endif\n\n(*......................................................................\nExercise 9: Define a function `min_bst`, such that `min_bst tree`\nreturns the minimum value stored in binary search tree `tree` as an\noption type, and `None` if the tree has no stored values. For purposes\nof determining the minimum, you can use the `Stdlib.min` operator for\ncomparing values stored in the nodes of the tree. For instance,\n\n    # min_bst bst_example ;;\n    - : int option = Some 5\n    # min_bst Empty ;;\n    - : 'a option = None\n......................................................................*)\n\n#ifndef SOLN\nlet min_bst (tree : 'a bintree): 'a option =\n  failwith \"min_bst not implemented\" ;;\n#else\nlet rec min_bst (tree : 'a bintree): 'a option =\n  match tree with\n  | Empty -> None\n  | Node (value, left, _right) ->\n     match left with\n     | Empty -> Some value\n     | Node (_,_,_) -> min_bst left ;;\n\n(* Notice that since the tree is stipulated to be a binary search\n   tree, we never need to look at the right subtree.*)\n#endif\n\n(* Constructing binary search trees must be done carefully so that the\ninvariant is always preserved. Next, you'll implement a function for\nadding a value to a binary search tree,while maintaining the\ninvariant. *)\n   \n(*......................................................................\nExercise 10: Define a function `insert_bst : 'a -> 'a bintree -> 'a\nbintree` such that if `tree` is a binary search tree, `insert_bst\nvalue tree` returns a tree with the same elements as `tree` but also\nwith the new `value` inserted. (If the value is already in the tree,\nthe tree can be returned unchanged.) Make sure that the tree that is\nreturned maintains the binary search tree invariant.\n\nFor instance, your function should have the following behavior.\n\n    # let tr = Empty\n\t       |> insert_bst 10\n\t       |> insert_bst 5\n\t       |> insert_bst 15\n\t       |> insert_bst 7\n\t       |> insert_bst 9 ;;            \n    val tr : int bintree =\n      Node (10, Node (5, Empty, Node (7, Empty, Node (9, Empty, Empty))),\n       Node (15, Empty, Empty))\n......................................................................*)\n\n#ifndef SOLN  \nlet rec insert_bst (value : 'a) (tree : 'a bintree) : 'a bintree =\n  failwith \"insert_bst not implemented\" ;;\n#else\nlet rec insert_bst (value : 'a) (tree : 'a bintree) : 'a bintree =\n  match tree with\n  | Empty -> Node (value, Empty, Empty)\n  | Node (old, left, right) ->\n     if value = old then tree\n     else if value < old then\n       Node (old, insert_bst value left, right)\n     else (* value > old *)\n       Node (old, left, insert_bst value right) ;;\n#endif\n     \n(* The *Gorn address* of a node in a tree (named after the early\ncomputer pioneer Saul Gorn of University of Pennsylvania, who invented\nthe technique) is a description of the path to take from the root of\nthe tree to the node in question. For a binary tree, the elements of\nthe path specify whether to go left or right at each node starting\nfrom the root of the tree. We'll define an enumerated type for the\npurpose of recording the left/right moves. *)\n\ntype direction = Left | Right ;;\n\n(* Thus, for the tree `bst_example` defined above, the Gorn address\nof the root is `[]` and the Gorn address of the node containing the\nvalue `9` is `[Left, Right, Right]`. *)\n\n(*......................................................................\nExercise 11: Define a function `gorn : 'a -> 'a bintree -> direction\nlist` that given a value and a binary search tree returns the Gorn\naddress of the value in the tree. It should raise a `Failure` exception\nif the value doesn't occur in the tree. For instance,\n\n    # gorn 9 bst_example ;;\n    - : direction list = [Left; Right; Right]\n    # gorn 10 bst_example ;;\n    - : direction list = []\n    # gorn 100 bst_example ;;\n    Exception: Failure \"gorn: value not found\".\n......................................................................*)\n\n#ifndef SOLN  \nlet rec gorn (value : 'a) (tree : 'a bintree) : 'a bintree =\n  failwith \"gorn not implemented\" ;;\n#else\nlet rec gorn (value : 'a) (tree : 'a bintree) : direction list =\n  match tree with\n  | Empty -> failwith \"gorn: value not found\"\n  | Node (old, left, right) ->\n     if value = old then []\n     else if value < old then\n       Left :: gorn value left\n     else (* value > old *)\n       Right :: gorn value right ;;\n#endif\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml","version":3}}}
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":20,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0331401824951ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 20, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":21,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0500679016113ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 21, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":22,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0298023223877ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 22, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":23,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0908374786377ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 23, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":24,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0269412994385ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 24, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":25,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"},"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":2}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0998973846436ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 25, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":26,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0572204589844ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 26, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":27,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"},"position":{"line":159,"character":58}}}
[server] Got a method textDocument/hover
[server] processing took 0.0200271606445ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 27, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":28,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"},"position":{"line":140,"character":5}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.06103515625ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 28, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":29,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0100135803223ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 29, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":30,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"},"range":{"start":{"line":140,"character":5},"end":{"line":140,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0340938568115ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 30, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":31,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0112056732178ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 31, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":32,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0379085540771ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 32, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":33,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"},"position":{"line":144,"character":24}}}
[server] Got a method textDocument/hover
[server] processing took 0.0288486480713ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 33, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":33}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml","languageId":"ocaml","version":1,"text":"(*\n                         CS 51 Problem Set 3\n                      Bignums and RSA encryption\n*)\n#ifdef SOLN\n(*\n                               SOLUTION\n*)\n#else\n#endif\n\n(* In this problem set, you'll implement arbitrary precision integers\n-- \"bignums\" -- for use in an implementation of the RSA public-key\ncryptographic system. As with the previous problem set, you may\nexpress your solution to a particular problem in terms of another\nfunction from a previous problem, and you may use functions from the\n`List` module where appropriate.\n\nBefore starting on the problem set, read the problem set 3 writeup in\n`readme.pdf`. It provides context and crucial information for\ncompleting the problems. In addition, make sure that you are familiar\nwith the problem set procedures in the document \"Problem set\nprocedures for CS51\".\n *)\n   \n(*======================================================================\n  Basics: representing bignums, negating and comparing them, and\n  converting between bignums and other representations.\n *)\n   \n(* bignum -- Type for representing bignums (arbitrary precision\n   integers. Uses a boolean field neg for negative numbers and a list\n   coeffs of coefficients from most to least significant. *)\n   \ntype bignum = {neg : bool; coeffs : int list} ;;\n\n(* cBASE -- Global constant, the base for representing bignums, which\n   must be a power of 10. Your code should work for any reasonable\n   value of `cBASE`, not just the initial value we've set it to. When\n   submitting, have `cBASE` be 1000, as it is here. *)\n  \nlet cBASE = 1000 ;;\n  \n(*......................................................................\nProblem 1: Negation\n......................................................................*)\n\n(* negate b -- Returns a `bignum` that is the negation of `b`. *) \n#ifndef SOLN      \nlet negate (b : bignum) : bignum =\n  failwith \"negate not implemented\" ;;\n#else\nlet negate (b : bignum) : bignum =\n  if b.coeffs = [] then b   (* check for zero explicitly to \n                               satisfy invariant *)\n  else {neg = not b.neg; coeffs = b.coeffs} ;;\n#endif\n\n(*......................................................................\nProblem 2: Comparing bignums\n......................................................................*)  \n  \n#ifndef SOLN\n(* equal b1 b2 -- Predicate returns `true` if and only if `b1` and\n   `b2` represent the same number. *)\nlet equal (b1 : bignum) (b2 : bignum) : bool =\n  failwith \"equal not implemented\" ;;\n\n(* less b1 b2 -- Predicate returns `true` if and only if `b1`\n   represents a smaller number than `b2`. *)\nlet less (b1 : bignum) (b2 : bignum) : bool =\n  failwith \"less not implemented\" ;;\n\n(* greater b1 b2 -- Predicate returns `true` if and only if `b1`\n   represents a larger number than `b2`. *)\nlet greater (b1 : bignum) (b2 : bignum) : bool =\n  failwith \"greater not implemented\" ;;\n#else\n(* equal b1 b2 -- Predicate returns `true` if and only if `b1` and\n   `b2` represent the same number. *)\nlet equal (b1 : bignum) (b2 : bignum) : bool =\n  b1 = b2 ;;\n\n(* less b1 b2 -- Predicate returns `true` if and only if `b1`\n   represents a smaller number than `b2`. *)\nlet less (b1 : bignum) (b2 : bignum) : bool =\n\n  (* list_compare l1 l2 -- Compares two equal length lists. Returns\n     true, if and only if `l1` comes before `l2` in lexicographic\n     order. *)\n  let rec less_list (l1: int list) (l2: int list) : bool =\n    match l1, l2 with\n    | [], [] -> false\n    | h1::t1, h2::t2 -> \n       if h1 = h2 then less_list t1 t2\n       else h1 < h2\n    | _, _ -> failwith \"less: shouldn't happen\" in\n\n  (* less_abs -- Compares two int lists of potentially unequal\n     length. Returns true, if and only if `l1` comes before `l2` in\n     lexicographic order, assuming zero padding, e.g., `less [2; 3]\n     [1; 1; 1]` should be `true`. *)\n  let less_abs (l1 : int list) (l2 : int list) : bool = \n    let len1, len2 = (List.length l1, List.length l2) in\n    if not (len1 = len2) then len1 < len2 else less_list l1 l2 in\n  \n  if not (b1.neg = b2.neg) then b1.neg\n  else if b1.neg then less_abs b2.coeffs b1.coeffs\n  else less_abs b1.coeffs b2.coeffs ;;  \n\n(* greater b1 b2 -- Predicate returns `true` if and only if `b1`\n   represents a larger number than `b2`. *)\nlet greater (b1 : bignum) (b2 : bignum) : bool =\n  less b2 b1 ;;  \n#endif\n\n(*......................................................................\nProblem 3: Converting to and from bignums\n......................................................................*)\n\n(* from_int n -- Returns a bignum representing the integer `n`. *)\n#ifndef SOLN\nlet from_int (n : int) : bignum =\n  failwith \"from_int not implemented\" ;;\n#else \nlet from_int (n : int) : bignum =\n  let rec make_coeffs (n : int) (r : int list) : int list =\n    if n = 0 then r\n    else make_coeffs (n / cBASE) ((abs (n mod cBASE)) :: r) in\n  {neg = (n < 0); coeffs = make_coeffs n []} ;;\n#endif\n     \n(* to_int b -- Returns `Some v`, where `v` is the `int` represented by\n   the bignum `b`, if possible, or `None` if `b` represents an integer\n   out of the representable range of the `int` type. *)\n#ifndef SOLN\nlet to_int (b : bignum) : int option =\n  failwith \"to_int not implemented\" ;;\n#else\nlet to_int (b : bignum) : int option =\n  let sum_coeffs (coeffs: int list) : int =\n    List.fold_left\n      (fun high low -> high * cBASE + low) 0 coeffs in\n  if greater b (from_int max_int) || less b (from_int min_int) then None\n  else Some ((sum_coeffs b.coeffs) * (if b.neg then -1 else 1)) ;;\n#endif\n\n(*======================================================================\n  Helpful functions (not to be used in problems 1 to 3)\n *)\n\n(* trim_leading_zeroes lst -- Removes zero coefficients from the beginning of\n   the coefficients part of a bignum representation *)\nlet rec trim_leading_zeroes (lst : int list) : int list =\n  match lst with\n  | 0 :: tl -> trim_leading_zeroes tl\n  | _ -> lst ;;\n\n(* clean b -- Removes zero coefficients from the beginning of a bignum\n   representation *)\nlet clean (b : bignum) : bignum =\n  {neg = b.neg; coeffs = trim_leading_zeroes b.coeffs} ;;\n\n(* rand_bignum bound -- Returns a random bignum from 0 to the absolute\n   value of `bound` (inclusive). Useful for randomly testing\n   functions. *)\nlet rand_bignum (bound : bignum) : bignum =\n  let rand_base = List.map (fun _ -> Random.int cBASE) in\n  let rec rand_bignum_rec (bounds : int list) =\n    match bounds with\n    | [] -> []\n    | h :: t -> let r = Random.int (h + 1) in\n                r :: ((if r = h then rand_bignum_rec else rand_base) t) in\n  {neg = false; coeffs = trim_leading_zeroes (rand_bignum_rec bound.coeffs)} ;;\n       \n(* explode s -- Splits a string `s` into a list of its characters. *)\nlet rec explode (s : string) : char list =\n  let len = String.length s in\n  if len = 0 then []\n  else s.[0] :: explode (String.sub s 1 (len - 1)) ;;\n\n(* implode cs -- Condenses a list of characters `cs` into a string. *)\nlet rec implode (cs : char list) : string =\n  match cs with\n  | [] -> \"\"\n  | c :: t -> String.make 1 c ^ implode t ;;\n                                          \n(* split lst n -- Returns a pair containing the first `n` elements of\n   `lst` and the remaining elements of `lst`. *)\nlet rec split lst n =\n  if n = 0 then ([], lst)\n  else match lst with\n       | [] -> ([], [])\n       | hd :: tl -> let lst1, lst2 = split tl (n - 1) in\n                     hd :: lst1, lst2 ;;\n\n(* take_first lst n -- Returns the first `n` elements of list `lst`\n   (or the whole `lst` if too short). *)\nlet take_first (lst : 'a list) (n : int) : 'a list =\n  fst (split lst n) ;;\n\n(* intlog base -- Returns the floor of the base 10 log of an integer\n   `base` *)\nlet intlog (base : int) : int =\n  int_of_float (log10 (float_of_int base)) ;;\n\n(* from_string s -- Converts a string `s` representing an integer to a\n   bignum. Assumes the base `cBASE` is a power of 10. *)\nlet from_string (s : string) : bignum =\n  \n  let rec from_string_rec (cs : char list) : int list =\n    if cs = [] then []\n    else\n      let (chars_to_convert, rest) = split cs (intlog cBASE) in\n      let string_to_convert = implode (List.rev chars_to_convert) in\n      int_of_string string_to_convert :: from_string_rec rest in\n  \n  match explode s with\n  | [] -> from_int 0\n  | h :: t ->\n      if h = '-' || h = '~' then\n        {neg = true; coeffs = (List.rev (from_string_rec (List.rev t)))}\n      else {neg = false;\n            coeffs =\n              (trim_leading_zeroes \n                 (List.rev (from_string_rec (List.rev (h :: t)))))}\n\n(* to_string b -- Converts a bignum `b` to its string representation.\n   Returns a string beginning with `~` for negative integers. Assumes\n   the base `cBASE` is a power of 10. *)\nlet to_string (b : bignum) : string =\n  \n  let rec pad_leading_zero_chars (s : string) (len : int) =\n    if String.length s >= len then s\n    else \"0\" ^ pad_leading_zero_chars s (len - 1) in\n  \n  let rec trim_leading_zero_chars (s : string) (c : char) =\n    if String.length s = 0 then\n      \"0\"\n    else if String.get s 0 = '0' then\n      trim_leading_zero_chars (String.sub s 1 (String.length s - 1)) c\n    else s in\n\n  let rec coeffs_to_string (coeffs : int list) : string =\n    match coeffs with\n    | [] -> \"\"\n    | h :: t -> pad_leading_zero_chars (string_of_int h) (intlog cBASE)\n                ^ coeffs_to_string t in\n  \n  let trimmed = trim_leading_zeroes b.coeffs in\n  if List.length trimmed = 0 then \"0\"\n  else let from_coeffs =\n         trim_leading_zero_chars (coeffs_to_string trimmed) '0' in\n       if b.neg then \"~\" ^ from_coeffs else from_coeffs ;;\n\n(*======================================================================\n  Arithmetic functions\n *)\n\n(* plus_nonneg b1 b2 -- Returns a bignum representing the sum of `b1` and\n   `b2`. NB: Assumes that (and works only when) the sum is nonnegative. *)\nlet plus_nonneg (b1 : bignum) (b2 : bignum) : bignum =\n\n  let pair_from_carry (carry : int) : bool * int list =\n    match carry with\n    |  0 -> false, []\n    |  1 -> false, [1]\n    | -1 -> true,  [1]\n    |  _ -> failwith \"pair_from_carry: invalid carry\" in\n       \n  let rec plus_with_carry (neg1, coeffs1 : bool * int list)\n                          (neg2, coeffs2 : bool * int list)\n                          (carry : int)\n                        : bool * int list =\n    match coeffs1, coeffs2 with\n    | [], [] -> pair_from_carry carry\n    | [], _ ->\n       if carry = 0 then (neg2, coeffs2)\n       else plus_with_carry (neg2, coeffs2) (pair_from_carry carry) 0\n    | _, [] ->\n       plus_with_carry (neg2, coeffs2) (neg1, coeffs1) carry\n    | h1 :: t1, h2 :: t2 ->\n       let sign1, sign2 =\n         (if neg1 then ~-1 else 1), (if neg2 then ~-1 else 1) in\n       let result = h1 * sign1 + h2 * sign2 + carry in\n       if result < 0 then\n         let negres, coeffsres =\n           plus_with_carry (neg1, t1) (neg2, t2) (~-1) in\n         negres, result + cBASE :: coeffsres\n       else if result >= cBASE then\n         let negres, coeffsres = plus_with_carry (neg1, t1) (neg2, t2) 1 in\n         negres, result - cBASE :: coeffsres\n       else\n         let negres, coeffsres = plus_with_carry (neg1, t1) (neg2, t2) 0 in\n         negres, result :: coeffsres in\n  \n  let neg_result, coeffs_result =\n    plus_with_carry (b1.neg, List.rev b1.coeffs)\n                    (b2.neg, List.rev b2.coeffs)\n                    0 in\n  {neg = neg_result;\n   coeffs = trim_leading_zeroes (List.rev coeffs_result)} ;;\n  \n(*......................................................................\nProblem 4\n\nThe `plus` function returns a bignum representing b1 + b2. However, it\ndoes NOT make the same assumption as `plus_nonneg` (that the sum is\nnonnegative).\n\nHint: How can you use `plus_nonneg` to implement `plus`? Make sure that\nyour implementation preserves the bignum invariant.\n......................................................................*)\n\n(* plus b1 b2 -- Returns the bignum sum of `b1` and `b2` *)\n#ifndef SOLN\nlet plus (b1 : bignum) (b2 : bignum) : bignum =\n  failwith \"plus not implemented\" ;;\n#else\nlet plus (b1 : bignum) (b2 : bignum) : bignum =\n\n  let negative_sum_p (b1: bignum) (b2: bignum) : bool =\n    b1.neg && b2.neg\n    || b1.neg && (not b2.neg) && (less b2 (negate b1))\n    || (not b1.neg) && b2.neg && (less b1 (negate b2)) in\n  \n  if negative_sum_p b1 b2 then\n    negate (plus_nonneg (negate b1) (negate b2))\n  else plus_nonneg b1 b2 ;;\n#endif\n\n(*......................................................................\nProblem 5\n\nThe times function returns a bignum representing b1 * b2. \n\nThink about how you were first taught multiplication, say, 543 x\n224. It went something like this:\n\n         5 4 3 \n       x 2 2 4\n       -------\n       2 1 7 2 <--- Partial product 5 4 3 x 4\n\n   + 1 0 8 6 0 <--- Partial product 5 4 3 x 2; note that a zero is \n                    appended after the partial product\n + 1 0 8 6 0 0 <--- Partial product 5 4 3 x 2; note that two zeroes\n -------------      are appended after the partial product\n = 1 2 1 6 3 2 <--- Sum of all (shifted) partial products \n\nWhen approaching this problem, it is advisable to break the problem\ndown into simpler, easier-to-implement sub-problems. That way, you can\ntest each helper function individually rather than having to test all\nof it at once, making locating bugs much easier. What are some natural\nsubproblems implied by the example above?\n\nYou may assume positivity in some of your helper functions if it \nsimplifies the code, as long as the invariant is preserved. \n......................................................................*)\n\n(* times b1 b2 -- Returns the bignum product of `b1` and `b2` *)\n#ifndef SOLN\nlet times (b1 : bignum) (b2 : bignum) : bignum =\n  failwith \"times not implemented\" ;;\n#else\nlet times (b1 : bignum) (b2 : bignum) : bignum =\n    \n  (* times_int coeffs n carry -- Multiplies a multi-coefficient number\n     `coeffs` by a single coefficient number `n` and adds `carry`\n     (that is, `coeffs * n + carry`). Deals only with the\n     coefficients, not the sign. Coefficient lists (both `coeffs` and\n     the return value) are reversed (low to high significant\n     digits). *)\n  let rec times_int (coeffs: int list) (n: int) (carry: int) : int list =\n    match coeffs with\n      | [] -> [carry]\n      | hd :: tl -> \n         let prod = hd * n + carry in\n         (prod mod cBASE) :: (times_int tl n (prod / cBASE)) in\n\n  (* times_helper coeffs1 coeffs2 zeroes r -- Multiplies two multi-coefficient\n     numbers `coeffs1` and `coeffs2`, all again reversed, appending a list of\n     `zeroes` to shift the result, and adds accumulator `r`. *)\n  let rec times_helper (coeffs1 : int list) (coeffs2 : int list)\n                       (zeroes: int list) (r: bignum) : bignum = \n    match coeffs2 with\n    | [] -> r\n    | h :: t -> \n       let term = List.rev (zeroes @ (times_int coeffs1 h 0)) in\n       times_helper coeffs1 \n                    t \n                    (0 :: zeroes) \n                    (plus r {neg = false; coeffs = term}) in\n\n  let sign =\n    (* sign of the product is negative if neg flags are different and\n       neither is zero *)\n    not (b1.neg = b2.neg) && not (b1.coeffs = [] || b2.coeffs = []) in\n  \n  let rev1, rev2 = (List.rev b1.coeffs, List.rev b2.coeffs) in\n  {neg = sign; coeffs = (times_helper rev1 rev2 [] (from_int 0)).coeffs} ;;\n#endif\n\n(*======================================================================\nChallenge Problem 6: Faster bignum multiplication \n......................................................................*)\n\n(* times_faster b1 b2 -- Returns a bignum representing the product of\n   `b1` and `b2`, making use of the Karatsuba algorithm for\n   multiplication. *)\n#ifndef SOLN\nlet times_faster (b1 : bignum) (b2 : bignum) : bignum =\n  failwith \"times_faster not implemented\" ;;\n#else\nlet times_faster (b1 : bignum) (b2 : bignum) : bignum =\n    \n  let abs_of_bignum b = if b.neg then negate b else b in\n  \n  let left_shift b n = \n    let rec zeroes zs n = if n > 0 then zeroes (0 :: zs) (n - 1) else zs in\n    {neg = b.neg; coeffs = b.coeffs @ (zeroes [] n)} in\n  \n  let rec karatsuba (b1: bignum) (b2: bignum) : bignum = \n    let len1, len2 = (List.length b1.coeffs, List.length b2.coeffs) in\n    let n = max len1 len2 in\n    if n < 4 then times b1 b2\n    else \n      let n = (n / 2) + (n mod 2) in\n      let x1, x2 = split b1.coeffs (len1 - n) in\n      let y1, y2 = split b2.coeffs (len2 - n) in\n      let x1, x2, y1, y2 = ({neg = false; coeffs = x1},\n                            {neg = false; coeffs = x2},\n                            {neg = false; coeffs = y1},\n                            {neg = false; coeffs = y2}) in\n      let a = karatsuba x1 y1 in\n      let c = karatsuba x2 y2 in\n      let b = plus (karatsuba (plus x1 x2) (plus y1 y2))\n                   (negate (plus a c)) in\n      plus (left_shift a (2 * n)) (plus (left_shift b n) c) in\n\n  let sign = not (b1.neg = b2.neg) && not (b1.coeffs = [] || b2.coeffs = []) in\n  let prod = karatsuba (abs_of_bignum b1) (abs_of_bignum b2) in\n  {neg = sign; coeffs = prod.coeffs} ;;\n#endif\n\n(*======================================================================\nReflection on the problem set\n\nAfter each problem set, we'll ask you to reflect on your experience.\nWe care about your responses and will use them to help guide us in\ncreating and improving future assignments.\n\n........................................................................\nPlease give us an honest (if approximate) estimate of how long (in\nminutes) this problem set took you to complete. \n......................................................................*)\n\n#ifndef SOLN\nlet minutes_spent_on_pset () : int =\n  failwith \"time estimate not provided\" ;;\n#else\nlet minutes_spent_on_pset () : int = 100 ;;\n#endif  \n\n(*......................................................................\nIt's worth reflecting on the work you did on this problem set. Where\ndid you run into problems and how did you end up resolving them? What\nmight you have done in retrospect that would have allowed you to\ngenerate as good a submission in less time? Please provide us your\nthoughts on these questions and any other reflections in the string\nbelow.\n......................................................................*)\n\n#ifndef SOLN\nlet reflection () : string =\n  \"...your reflections here...\" ;;\n#else\nlet reflection () : string =\n  \"Here are my reflections...\" ;;\n#endif  \n"}}}
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin"}}
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":34,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0391006469727ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 34, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":35,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0321865081787ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 35, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":36,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0119209289551ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 36, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":37,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"},"position":{"line":15,"character":30}}}
[server] Got a method textDocument/hover
[server] processing took 0.0219345092773ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 37, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":37}}
Read message 
{"jsonrpc":"2.0","id":38,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"},"range":{"start":{"line":270,"character":4},"end":{"line":270,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0350475311279ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 38, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":39,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"},"range":{"start":{"line":334,"character":4},"end":{"line":334,"character":7}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0269412994385ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 39, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":40,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"},"range":{"start":{"line":334,"character":4},"end":{"line":334,"character":9}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.144004821777ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 40, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":41,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"},"range":{"start":{"line":360,"character":3},"end":{"line":360,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0250339508057ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 41, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":42,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"},"position":{"line":374,"character":15}}}
[server] Got a method textDocument/hover
[server] processing took 0.0231266021729ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 42, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":43,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"},"position":{"line":395,"character":33}}}
[server] Got a method textDocument/hover
[server] processing took 0.0240802764893ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 43, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2020/psets/ps3-sophiaqho/bignum.ml","languageId":"ocaml","version":1,"text":"(*\n                         CS 51 Problem Set 3\n                           Bignums and RSA\n*)\n\n(* In this problem set, you'll implement arbitrary precision integers\n-- \"bignums\", for use in an implementation of the RSA pouyblic-key\ncryptographic system. As with the previous problem set, you may\nexpress your solution to a particular problem in terms of another\nfunction from a previous problem. Furthermore, you may use functions\nfrom the `List` module where appropriate. *)\n\n(*======================================================================\n  Basics: representing bignums, negating and comparing them, and\n  converting between bignums and other repsentations.\n *)\n\n(* bignum -- Type for representing bignums (arbitrary precision\n   integers. Uses a boolean field neg for negative numbers and a list\n   coeffs of coefficients from most to least significant. *)\n\ntype bignum = {neg: bool; coeffs: int list} ;;\n\n(* cBASE -- Global constant, the base for representing bignums, which\n   must be a power of 10. Your code should work for any reasonable\n   value of `cBASE`, not just the initial value we've set it to. When\n   submitting, have `cBASE` be 1000, as it is here. *)\n\nlet cBASE = 1000 ;;\n\n(*......................................................................\nProblem 1: Negation\n......................................................................*)\n\n(* negate b -- Returns a `bignum` that is the negation of `b`. *)\nlet negate ({neg; coeffs} : bignum) : bignum =\n  if coeffs <> [] then {neg = not neg; coeffs} else {neg; coeffs} ;;\n\n(*......................................................................\nProblem 2: Comparing bignums\n......................................................................*)\n\n(* equal b1 b2 -- Predicate returns `true` if and only if `b1` and\n   `b2` represent the same number. *)\nlet equal (b1 : bignum) (b2 : bignum) : bool =\n  b1.neg = b2.neg && b1.coeffs = b2.coeffs ;;\n\n   (* less b1 b2 -- Predicate returns `true` if and only if `b1`\n      represents a smaller number than `b2`. *)\nlet rec less (b1 : bignum) (b2 : bignum) : bool =\n  Printf.printf \"less\";\n  if equal b1 b2 then false\n  else if b1.neg && not b2.neg then true\n  else if not b1.neg && b2.neg then false\n  else let (b1_length, b2_length) =\n    (List.length b1.coeffs, List.length b2.coeffs) in\n    if (b1.neg && b2.neg) && (b1_length > b2_length) then true\n    else if (b1.neg && b2.neg) && (b1_length < b2_length) then false\n    else if (not b1.neg && not b2.neg) && (b1_length > b2_length) then false\n    else if (not b1.neg && not b2.neg) && (b1_length < b2_length) then true\n      else match b1.coeffs, b2.coeffs with\n      | [], [] -> false\n      | (_::_, []) -> false\n      | ([], _::_) -> true\n      | (h1 :: t1), (h2 :: t2) ->\n        if ((h1 > h2) && (b1.neg && b2.neg)) then true\n        else if ((h1 < h2) && (b1.neg && b2.neg)) then false\n        else if ((h1 > h2) && (not b1.neg && not b2.neg)) then false\n        else if ((h1 < h2) && (not b1.neg && not b2.neg)) then true\n        else less {neg = b1.neg; coeffs = t1} {neg = b2.neg; coeffs = t2} ;;\n\n(* greater b1 b2 -- Predicate returns `true` if and only if `b1`\n   represents a larger number than `b2`. *)\nlet greater (b1 : bignum) (b2 : bignum) : bool =\n  less b2 b1 ;;\n\n(*......................................................................\nProblem 3: Converting to and from bignums\n......................................................................*)\n\n(* from_int n -- Returns a bignum representing the integer `n`. *)\n\nlet rec int_list (x : int) : int list =\n  match x with\n  | 0 -> []\n  | x -> (abs (x mod cBASE)) :: int_list (abs (x / cBASE)) ;;\n\nlet from_int (n : int) : bignum =\n  {neg = if n >= 0 then false else true;\n    coeffs = List.rev (int_list n)} ;;\n\n(* to_int b -- Returns `Some v`, where `v` is the `int` represented by\n   the bignum `b`, if possible, or `None` if `b` represents an integer\n   out of the representable range of the `int` type. *)\n\nlet to_int (b : bignum) : int option =\n  if less b (from_int (min_int)) || greater b (from_int (max_int))\n  then None else\n    let integer =\n    List.fold_right (fun x y -> x + (y * cBASE)) (List.rev b.coeffs) 0\n      in if integer = 0 then None\n      else (if b.neg then Some (~-integer)\n        else Some integer) ;;\n\n(*======================================================================\n  Helpful functions (not to be used in problems 1 to 3)\n *)\n\n(* strip_zeroes lst -- Removes zero coefficients from the beginning of\n   the coefficients part of a bignum representation *)\nlet rec strip_zeroes (lst : int list) : int list =\n  match lst with\n  | 0 :: t -> strip_zeroes t\n  | _ -> lst ;;\n\n(* clean b -- Removes zero coefficients from the beginning of a bignum\n   representation *)\nlet clean (b : bignum) : bignum =\n  {neg = b.neg; coeffs = strip_zeroes b.coeffs} ;;\n\n(* rand_bignum bound -- Returns a random bignum from 0 to the absolute\n   value of `bound` (inclusive). Useful for randomly testing\n   functions. *)\nlet rand_bignum (bound : bignum) : bignum =\n  let randbase = List.map (fun _ -> Random.int cBASE) in\n  let rec rand_bignum_rec (bounds : int list) =\n    match bounds with\n    | [] -> []\n    | h :: t -> let r = Random.int (h + 1) in\n                r :: ((if r = h then rand_bignum_rec else randbase) t) in\n  {neg = false; coeffs = strip_zeroes (rand_bignum_rec bound.coeffs)} ;;\n\n(* explode s -- Splits a string `s` into a list of its characters. *)\nlet rec explode (s : string) : char list =\n  let len = String.length s in\n  if len = 0 then []\n  else s.[0] :: explode (String.sub s 1 (len - 1)) ;;\n\n(* implode cs -- Condenses a list of characters `cs` into a string. *)\nlet rec implode (cs : char list) : string =\n  match cs with\n  | [] -> \"\"\n  | c :: t -> String.make 1 c ^ implode t ;;\n\n(* split lst n -- Returns a pair containing the first `n` elements of\n   `lst` and the remaining elements of `lst`. *)\nlet rec split lst n =\n  if n = 0 then ([], lst)\n  else match lst with\n       | [] -> ([], [])\n       | hd :: tl -> let lst1, lst2 = split tl (n - 1) in\n                     hd :: lst1, lst2 ;;\n\n(* take_first lst n -- Returns the first `n` elements of list `lst`\n   (or the whole `lst` if too short). *)\nlet take_first (lst : 'a list) (n : int) : 'a list =\n  fst (split lst n) ;;\n\n(* intlog base -- Returns the floor of the base 10 log of an integer\n   `base` *)\nlet intlog (base : int) : int =\n  int_of_float (log10 (float_of_int base)) ;;\n\n(* from_string s -- Converts a string `s` representing an integer to a\n   bignum. Assumes the base `cBASE` is a power of 10. *)\nlet from_string (s : string) : bignum =\n\n  let rec from_string_rec (cs : char list) : int list =\n    if cs = [] then []\n    else\n      let (chars_to_convert, rest) = split cs (intlog cBASE) in\n      let string_to_convert = implode (List.rev chars_to_convert) in\n      int_of_string string_to_convert :: from_string_rec rest in\n\n  match explode s with\n  | [] -> from_int 0\n  | h :: t ->\n      if h = '-' || h = '~' then\n        {neg = true; coeffs = (List.rev (from_string_rec (List.rev t)))}\n      else {neg = false;\n            coeffs =\n              (strip_zeroes (List.rev (from_string_rec (List.rev (h :: t)))))} ;;\n\n(* to_string b -- Converts a bignum `b` to its string representation.\n   Returns a string beginning with `~` for negative integers. Assumes\n   the base `cBASE` is a power of 10. *)\nlet to_string (b : bignum) : string =\n\n  let rec pad_with_zeroes_left (s : string) (len : int) =\n    if String.length s >= len then s\n    else \"0\" ^ pad_with_zeroes_left s (len - 1) in\n\n  let rec strip_str_zeroes (s : string) (c : char) =\n    if String.length s = 0 then\n      \"0\"\n    else if String.get s 0 = '0' then\n      strip_str_zeroes (String.sub s 1 (String.length s - 1)) c\n    else s in\n\n  let rec coeffs_to_string (coeffs : int list) : string =\n    match coeffs with\n    | [] -> \"\"\n    | h :: t -> pad_with_zeroes_left (string_of_int h) (intlog cBASE)\n                ^ coeffs_to_string t in\n\n  let stripped = strip_zeroes b.coeffs in\n  if List.length stripped = 0 then \"0\"\n  else let from_coeffs = strip_str_zeroes (coeffs_to_string stripped) '0' in\n       if b.neg then \"~\" ^ from_coeffs else from_coeffs ;;\n\n(*======================================================================\n  Arithmetic functions\n *)\n\n(* plus_pos b1 b2 -- Returns a bignum representing the sum of `b1` and\n   `b2`.  Assumes that the sum is positive. *)\nlet plus_pos (b1 : bignum) (b2 : bignum) : bignum =\n\n  let pair_from_carry (carry : int) : bool * int list =\n    if carry = 0 then (false, [])\n    else if carry = 1 then (false, [1])\n    else (true, [1]) in\n\n  let rec plus_with_carry ((neg1, coeffs1) : bool * int list)\n                          ((neg2, coeffs2) : bool * int list)\n                          (carry : int)\n                        : bool * int list =\n    match (coeffs1, coeffs2) with\n    | ([], []) -> pair_from_carry carry\n    | ([], _) ->\n        if carry = 0 then (neg2, coeffs2)\n        else plus_with_carry (neg2, coeffs2) (pair_from_carry carry) 0\n    | (_, []) ->\n        if carry = 0 then (neg1, coeffs1)\n        else plus_with_carry (neg1, coeffs1) (pair_from_carry carry) 0\n    | (h1 :: t1, h2 :: t2) ->\n        let (sign1, sign2) =\n         ((if neg1 then -1 else 1), (if neg2 then -1 else 1)) in\n        let result = h1 * sign1 + h2 * sign2 + carry in\n        if result < 0 then\n          let (negres, coeffsres) =\n            plus_with_carry (neg1, t1) (neg2, t2) (-1) in\n          (negres, result + cBASE :: coeffsres)\n        else if result >= cBASE then\n          let (negres, coeffsres) = plus_with_carry (neg1, t1) (neg2, t2) 1 in\n          (negres, result - cBASE :: coeffsres)\n        else\n          let (negres, coeffsres) = plus_with_carry (neg1, t1) (neg2, t2) 0 in\n          (negres, result :: coeffsres) in\n\n  let (neg_result, coeffs_result) =\n    plus_with_carry (b1.neg, List.rev b1.coeffs)\n                    (b2.neg, List.rev b2.coeffs)\n                    0 in\n  {neg = neg_result; coeffs = strip_zeroes (List.rev coeffs_result)} ;;\n\n(*......................................................................\nProblem 4\n\nThe `plus` function returns a bignum representing b1 + b2. However, it\ndoes NOT make the same assumption as `plus_pos` (that the sum is\npositive).\n\nHint: How can you use `plus_pos` to implement `plus`? Make sure that\nyour implementation preserves the bignum invariant.\n......................................................................*)\n\n(* plus b1 b2 -- Returns the bignum sum of `b1` and `b2` *)\nlet plus (b1 : bignum) (b2 : bignum) : bignum =\n  match b1.neg, b2.neg with\n  | false, false -> plus_pos b1 b2\n  | true, true -> if b1.coeffs = [] || b2.coeffs = []\n    then raise (Invalid_argument \"negative zero\")\n    else negate (plus_pos (negate b1) (negate b2))\n  | false, true ->\n    if not (less {neg = false; coeffs = b1.coeffs} {neg = false; coeffs = b2.coeffs})\n    then plus_pos b1 b2\n    else negate (plus_pos (negate b1) (negate b2))\n  | true, false ->\n    if (less {neg = false; coeffs = b1.coeffs} {neg = false; coeffs = b2.coeffs})\n    then plus_pos b1 b2\n    else negate (plus_pos (negate b1) (negate b2)) ;;\n\n(*......................................................................\nProblem 5\n\nThe times function returns a bignum representing b1 * b2. Think about\nhow you were first taught multiplication:\n\n      543\n    x 224\n    -----\n     2172\n  + 10860 <--- Note that a zero is appended after the partial product\n + 108600 <--- Note that two zeroes are appended after the partial product\n --------\n = 121632\n\nWhen approaching this problem, it is advisable to break the problem\ndown into simpler, easier-to-implement sub-problems. That way, if a\nbug arises in your code, you can test each helper function\nindividually rather than having to test all of it at once.\n\nYou may assume positivity in some of your helper functions if it\nsimplifies the code, as long as the invariant is preserved.\n\nhow to multiply the entire list by the end of the list of b2.coeffs\nhow to append certain zeroes at the end\n......................................................................*)\n\n(* multiply an int list by int and carries over *)\nlet rec times_int (lst : int list) (x : int) (c : int) : int list =\n  match lst with\n  | [] -> if c <> 0 then [c] else []\n  | hd :: tl ->\n    let new_hd = (hd * x + c) mod cBASE in\n      let carry = (hd * x + c - new_hd) / cBASE in\n        new_hd :: times_int tl x carry ;;\n\nlet rec list_list (lst1 : int list) (lst2 : int list) : int list list =\n  match lst1 with\n  | [] -> []\n  | hd :: tl -> (times_int lst2 hd 0) :: list_list tl lst2 ;;\n\nlet rec append_zeroes (lst : int list list) : int list list =\n  match lst with\n  | [] -> []\n  | hd :: tl ->\n    hd :: append_zeroes (List.map (fun zero -> 0 :: zero) tl) ;;\n\nlet plus_list (lst1 : int list) (lst2 : int list) : int list =\n  let lst = plus {neg = false; coeffs = (List.rev lst1)} {neg = false; coeffs = (List.rev lst2)}\n    in List.rev lst.coeffs ;;\n\nlet rec add_list (lst : int list list) : int list =\n  match lst with\n  | [] -> []\n  | [hd] -> hd\n  | hd :: bd :: tl -> plus_list (plus_list (hd) bd) (add_list tl) ;;\n\nlet times (b1 : bignum) (b2 : bignum) : bignum =\n  let lst =\n  List.rev (add_list (append_zeroes (list_list (List.rev b1.coeffs) (List.rev b2.coeffs)))) in\n    if ((b1.neg = true && b1.coeffs = []) || (b2.neg = true && b2.coeffs = []))\n      then raise (Invalid_argument \"negative zero\")\n      else if b1.coeffs = [] || b2.coeffs = [] then {neg = false; coeffs = []}\n      else if b1.neg = b2.neg\n        then {neg = false; coeffs = lst}\n      else {neg = true; coeffs = lst} ;;\n\n(*======================================================================\nChallenge Problem 8: Faster bignum multiplication\n......................................................................*)\n\n(* times_faster b1 b2 -- Returns a bignum representing the product of\n   `b1` and `b2`, making use of the Karatsuba algorithm for\n   multiplication. *)\nlet times_faster (b1 : bignum) (b2 : bignum) : bignum =\n  failwith \"times_faster not implemented\" ;;\n\n(*======================================================================\nReflection on the problem set\n\nAfter each problem set, we'll ask you to reflect on your experience.\nWe care about your responses and will use them to help guide us in\ncreating and improving future assignments.\n\n........................................................................\nPlease give us an honest (if approximate) estimate of how long (in\nminutes) this problem set took you to complete.\n......................................................................*)\n\nlet minutes_spent_on_pset () : int = 3600 ;;\n\n(*......................................................................\nIt's worth reflecting on the work you did on this problem set, where\nyou ran into problems and how you ended up resolving them. What might\nyou have done in retrospect that would have allowed you to generate as\ngood a submission in less time? Please provide us your thoughts in the\nstring below.\n......................................................................*)\n\nlet reflection () : string =\n  \"I found that it was helpful to try and write out on paper what my functions should do and how they should work, especially for a complex function like times where I use additional helper functions in my actual function.\" ;;\n"}}}
Found a `.merlin` file at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
]] Making a new jbuilder package at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
=== Project root: /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho/jbuild"}}
Read message 
{"jsonrpc":"2.0","id":44,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2020/psets/ps3-sophiaqho/bignum.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0760555267334ms
Found a `.merlin` file at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
]] Making a new jbuilder package at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
=== Project root: /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
Detected `opam` dependency manager for local use
Sending response {"id": 44, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho/jbuild"}}
Found a `.merlin` file at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
]] Making a new jbuilder package at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
=== Project root: /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":45,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2020/psets/ps3-sophiaqho/bignum.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.0240802764893ms
Found a `.merlin` file at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
]] Making a new jbuilder package at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
=== Project root: /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
Detected `opam` dependency manager for local use
Sending response {"id": 45, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho/jbuild"}}
Read message 
{"jsonrpc":"2.0","id":46,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2020/psets/ps3-sophiaqho/bignum.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0550746917725ms
Found a `.merlin` file at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
]] Making a new jbuilder package at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
=== Project root: /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
Detected `opam` dependency manager for local use
Sending response {"id": 46, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho/jbuild", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":47,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2020/psets/ps3-sophiaqho/bignum.ml"},"position":{"line":5,"character":48}}}
[server] Got a method textDocument/hover
[server] processing took 0.0181198120117ms
Found a `.merlin` file at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
]] Making a new jbuilder package at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
=== Project root: /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
Detected `opam` dependency manager for local use
Sending response {"id": 47, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho/jbuild"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":47}}
Read message 
{"jsonrpc":"2.0","id":48,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.014066696167ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 48, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":49,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"},"range":{"start":{"line":360,"character":3},"end":{"line":360,"character":8}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.014066696167ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 49, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":50,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"},"position":{"line":386,"character":13}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.018835067749ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 50, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":51,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"},"range":{"start":{"line":386,"character":13},"end":{"line":386,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0238418579102ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 51, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":52,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0231266021729ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 52, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":53,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"},"position":{"line":382,"character":61}}}
[server] Got a method textDocument/hover
[server] processing took 0.0250339508057ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 53, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":54,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"},"position":{"line":381,"character":61}}}
[server] Got a method textDocument/hover
[server] processing took 0.0238418579102ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 54, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":55,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"},"position":{"line":384,"character":60}}}
[server] Got a method textDocument/hover
[server] processing took 0.0271797180176ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 55, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":56,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2020/psets/ps3-sophiaqho/bignum.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0228881835938ms
Found a `.merlin` file at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
]] Making a new jbuilder package at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
=== Project root: /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
Detected `opam` dependency manager for local use
Sending response {"id": 56, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho/jbuild"}}
Read message 
{"jsonrpc":"2.0","id":57,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2020/psets/ps3-sophiaqho/bignum.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0240802764893ms
Found a `.merlin` file at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
]] Making a new jbuilder package at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
=== Project root: /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
Detected `opam` dependency manager for local use
Sending response {"id": 57, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho/jbuild", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":58,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0209808349609ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 58, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":59,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"},"range":{"start":{"line":386,"character":13},"end":{"line":386,"character":13}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0150203704834ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 59, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":58}}
Read message 
{"jsonrpc":"2.0","id":60,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"},"position":{"line":382,"character":58}}}
[server] Got a method textDocument/hover
[server] processing took 0.0221729278564ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 60, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":61,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0240802764893ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src
=== Project root: /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption
Detected `opam` dependency manager for local use
Sending response {"id": 61, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":62,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2020/psets/ps3-sophiaqho/bignum.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0498294830322ms
Found a `.merlin` file at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
]] Making a new jbuilder package at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
=== Project root: /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
Detected `opam` dependency manager for local use
Sending response {"id": 62, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho/jbuild"}}
Read message 
{"jsonrpc":"2.0","id":63,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2020/psets/ps3-sophiaqho/bignum.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0278949737549ms
Found a `.merlin` file at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
]] Making a new jbuilder package at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
=== Project root: /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
Detected `opam` dependency manager for local use
Sending response {"id": 63, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho/jbuild", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":64,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2020/psets/ps3-sophiaqho/bignum.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0159740447998ms
Found a `.merlin` file at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
]] Making a new jbuilder package at /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
=== Project root: /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho
Detected `opam` dependency manager for local use
Sending response {"id": 64, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2020/psets/ps3-sophiaqho/jbuild", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/psets/ps3_number_representation_for_encryption/src/bignum.cppo.ml"}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2020/psets/ps3-sophiaqho/bignum.ml"}}}
Read message 
{"jsonrpc":"2.0","id":65,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 65, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":66,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0162124633789ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 66, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":67,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"},"range":{"start":{"line":140,"character":5},"end":{"line":140,"character":5}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.0109672546387ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 67, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":65}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":67}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part2.cppo.ml"}}}
Read message 
{"jsonrpc":"2.0","id":68,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part1.cppo.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.138998031616ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 68, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":69,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part1.cppo.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00810623168945ms
Found a `dune` file at /Users/sophiaho/CS51/2023TF/labs/lab6/src
]] Making a new jbuilder package at /Users/sophiaho/CS51/2023TF/labs/lab6/src
=== Project root: /Users/sophiaho/CS51/2023TF/labs/lab6
Detected `opam` dependency manager for local use
Sending response {"id": 69, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/sophiaho/CS51/2023TF/labs/lab6/src/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/sophiaho/CS51/2023TF/labs/lab6/src/lab6_part1.cppo.ml"}}}
Read message 
{"jsonrpc":"2.0","id":70,"method":"shutdown","params":null}
Sending response {"id": 70, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"exit","params":null}
Got exit! Terminating loop
Finished
